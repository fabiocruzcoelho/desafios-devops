apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}
  labels:
    app: {{ template "appname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
      matchLabels:
        app: {{ template "appname" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "appname" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: NAME
          value: {{ .Values.show.name }}
        {{- if eq .Values.serviceweb.enabled true }}
        ports:
        - name: "{{ .Values.service.name }}"
          containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.service.probe.healthcheck }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessprobe.initialDelaySeconds }}
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: {{ .Values.service.probe.healthcheck }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readinessprobe.initialDelaySeconds }}
          timeoutSeconds: 10
          failureThreshold: 5
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        {{- end }}